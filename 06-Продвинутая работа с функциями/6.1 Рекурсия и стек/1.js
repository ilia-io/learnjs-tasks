// Вычислить сумму чисел до данного
// важность: 5
// Напишите функцию sumTo(n), которая вычисляет сумму чисел 1 + 2 + ... + n.

// Например:

// sumTo(1) = 1
// sumTo(2) = 2 + 1 = 3
// sumTo(3) = 3 + 2 + 1 = 6
// sumTo(4) = 4 + 3 + 2 + 1 = 10
// ...
// sumTo(100) = 100 + 99 + ... + 2 + 1 = 5050
// Сделайте три варианта решения:

// С использованием цикла.
function sumToC(n) {
  let sum = 0;
  for (let i = 1; i <= n; i++) {
    sum += i;
  }
  return sum;
}
// Через рекурсию, т.к. sumTo(n) = n + sumTo(n-1) for n > 1.
function sumToR(n) {
  return n === 1 ? n : n + sumToR(n - 1);
}
// С использованием формулы арифметической прогрессии.
function sumToA(n) {
  return (n * (n + 1)) / 2;
}
// Пример работы вашей функции:

// alert( sumTo(100) ); // 5050
// P.S. Какой вариант решения самый быстрый? Самый медленный? Почему?

// P.P.S. Можно ли при помощи рекурсии посчитать sumTo(100000)?


//ответ: самый быстрый решение по формуле, самый медленный рекурсия
//sumTo(100000) посчитать нельзя, потому что стек переполнится

console.log(sumToC(100));
console.log(sumToR(100));
console.log(sumToA(100));
